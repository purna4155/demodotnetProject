# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- none

stages:
- stage: 'buildstage'
  jobs:
  - job: 'build'
    pool:
     VmImage: ubuntu-latest
    variables:
     buildConfiguration: 'Release'
    steps:
    - task: DotNetCoreCLI@2
      inputs:
        command: 'restore'
        projects: '**/*.csproj'
        feedsToUse: 'select'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'build'
        projects: '**/*.csproj'
        arguments: '--configuration $(BuildConfiguration)'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'publish'
        publishWebProjects: true
        arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'
        
- stage: 'deploymentstage'
  dependsOn: buildstage
  jobs:
  - job: "deployjob"
    pool:
     VmImage: ubuntu-latest
    steps:
    - download : current 
      artifact: drop
    - task: AzureRmWebAppDeployment@4
      inputs:
        ConnectionType: 'AzureRM'
        azureSubscription: 'myarmservice'
        appType: 'webApp'
        WebAppName: 'testweb-ap'
        packageForLinux: '$(Pipeline.Workspace)/**/*.zip'
