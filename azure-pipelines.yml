# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- none

stages:
- stage: 'buildstage'
  jobs:
  - job: 'build'
    pool:
     VmImage: ubuntu-latest
    variables:
     buildConfiguration: 'Release'
    steps:
    - task: DotNetCoreCLI@2
      inputs:
        command: 'restore'
        projects: '**/*.csproj'
        feedsToUse: 'select'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'build'
        projects: '**/*.csproj'
        arguments: '--configuration $(BuildConfiguration)'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'publish'
        publishWebProjects: true
        arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'
        
- stage: 'deploymentstage'
  dependsOn: buildstage
  jobs:
  - deployment: 'deployjob'
    pool:
     vmImage: 'windows-latest'
    environment:
     name: myiis
     resourceType: VirtualMachine

    strategy:
     runOnce:
      deploy:
        steps:
        - task: IISWebAppManagementOnMachineGroup@0
          inputs:
            EnableIIS: true
            IISDeploymentType: 'IISWebsite'
            ActionIISWebsite: 'CreateOrUpdateWebsite'
            WebsiteName: 'default website'
            WebsitePhysicalPath: '%SystemDrive%\inetpub\wwwroot'
            WebsitePhysicalPathAuth: 'WebsiteUserPassThrough'
            AddBinding: true
            Protocol: http
            IPAddress: 'All Unassigned'
            port: 90
        - task: IISWebAppDeploymentOnMachineGroup@0
          inputs:
            WebSiteName: 'default website'
            Package: '$(Pipeline.Workspace)/**/*.zip'
   
  
    
